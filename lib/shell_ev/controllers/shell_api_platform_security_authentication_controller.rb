# shell_ev
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellEv
  # ShellAPIPlatformSecurityAuthenticationController
  class ShellAPIPlatformSecurityAuthenticationController < BaseController
    # To obtain APIGEE access token
    # @param [String] grant_type Required parameter: In OAuth 2.0, the term
    # grant typee refers to the way an application gets an access token. OAuth
    # 2.0 defines several grant types, including the authorization code flow.
    # @param [String] client_id Required parameter: After registering your app,
    # you will receive a client ID and a client secret. The client ID is
    # considered public information, and is used to build login URLs, or
    # included in Javascript source code on a page.
    # @param [String] client_secret Required parameter: After registering your
    # app, you will receive a client ID and a client secret. The client ID is
    # considered public information, and is used to build login URLs, or
    # included in Javascript source code on a page. The client secret must be
    # kept confidential.
    # @return [AccessTokenResponse] response from the API call
    def oauth_token_post(grant_type,
                         client_id,
                         client_secret)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/oauth/token',
                                     Server::DEFAULT)
                   .form_param(new_parameter(grant_type, key: 'grant_type'))
                   .form_param(new_parameter(client_id, key: 'client_id'))
                   .form_param(new_parameter(client_secret, key: 'client_secret'))
                   .header_param(new_parameter('application/x-www-form-urlencoded', key: 'content-type'))
                   .header_param(new_parameter('application/json', key: 'accept')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(AccessTokenResponse.method(:from_hash))
                   .local_error('401',
                                'Unauthorized',
                                AccessTokenErrorException))
        .execute
    end
  end
end
